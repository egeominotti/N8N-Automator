{
  "name": "RAG Sommelier Chat - Vector Search",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "initialMessages": "🍷 **Benvenuto nel Wine Expert RAG System**\n\nSono il tuo sommelier AI con accesso a un database vettoriale di vini.\nPosso aiutarti con:\n- 🔍 Ricerca semantica nel catalogo vini\n- 🍽️ Abbinamenti cibo-vino personalizzati\n- 📊 Analisi e confronto tra vini\n- 💡 Consigli basati su preferenze\n\nCosa posso cercare per te?",
        "options": {
          "title": "RAG Sommelier - Wine Expert",
          "subtitle": "Ricerca vettoriale intelligente",
          "placeholderText": "Chiedi qualsiasi cosa sui vini..."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [-1000, 0],
      "id": "chat-trigger",
      "name": "Chat Interface"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Sei un Sommelier AI esperto con accesso a un database RAG di vini.\n\n## TUE CAPACITÀ:\n1. **Ricerca Vettoriale**: Accedi a embeddings di vini per ricerche semantiche\n2. **Analisi Contestuale**: Comprendi il contesto e l'intento dell'utente\n3. **Consigli Personalizzati**: Suggerisci vini basati su:\n   - Preferenze di gusto\n   - Budget\n   - Occasione\n   - Abbinamenti gastronomici\n\n## PROCESSO DI RISPOSTA:\n1. Analizza la richiesta dell'utente\n2. Usa SEMPRE il tool di ricerca vettoriale per trovare vini pertinenti\n3. Arricchisci i risultati con informazioni da PostgreSQL\n4. Presenta i risultati in modo elegante con:\n   - 🏷️ Nome e produttore\n   - 📍 Regione e annata\n   - 💰 Prezzo\n   - 🍇 Vitigno\n   - 📝 Note di degustazione\n   - 🍽️ Abbinamenti consigliati\n   - ⭐ Punteggio di rilevanza\n\n## FORMATO RISPOSTA:\nUsa sempre formattazione markdown con emoji appropriate.\nLimita i risultati ai TOP 3 più rilevanti.\nSpiega sempre PERCHÉ hai scelto questi vini.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [-600, 0],
      "id": "ai-agent",
      "name": "RAG Sommelier Agent"
    },
    {
      "parameters": {
        "modelName": "llama3.2:3b",
        "options": {
          "temperature": 0.3,
          "topP": 0.9,
          "numCtx": 8192
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [-600, 200],
      "id": "ollama-llm",
      "name": "Ollama LLM",
      "credentials": {
        "ollamaApi": {
          "id": "ollama-cred",
          "name": "Ollama Local"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 20,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [-400, 200],
      "id": "memory",
      "name": "Chat Memory"
    },
    {
      "parameters": {
        "toolDescription": "=Cerca vini nel database vettoriale usando ricerca semantica. Usa questo tool SEMPRE quando l'utente fa domande sui vini. Query può essere: tipo di vino, caratteristiche, abbinamenti, regione, prezzo, occasione.",
        "qdrantCollection": {
          "mode": "list",
          "value": "wine_knowledge"
        },
        "topK": 5,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [-800, 400],
      "id": "vector-search",
      "name": "Qdrant Vector Search",
      "credentials": {
        "qdrantApi": {
          "id": "qdrant-cred",
          "name": "Qdrant Local"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "=Ottieni metadata dettagliati dei vini dal database PostgreSQL. Usa dopo la ricerca vettoriale per arricchire i risultati con informazioni complete.",
        "operation": "executeQuery",
        "query": "=SELECT * FROM wine_metadata WHERE wine_id = ANY($1::varchar[]) ORDER BY price ASC",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSql",
      "typeVersion": 1,
      "position": [-800, 550],
      "id": "postgres-metadata",
      "name": "Get Wine Metadata",
      "credentials": {
        "postgres": {
          "id": "postgres-cred",
          "name": "PostgreSQL Local"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Wine similarity calculator\nconst userQuery = $input.all()[0].json.query;\nconst wines = $input.all()[0].json.results || [];\n\n// Calculate relevance scores\nconst scoredWines = wines.map(wine => {\n  let score = wine.similarity_score || 0;\n  \n  // Boost score based on query keywords\n  const queryLower = userQuery.toLowerCase();\n  \n  if (queryLower.includes('economico') && wine.price < 20) score += 0.2;\n  if (queryLower.includes('pregiato') && wine.price > 50) score += 0.2;\n  if (queryLower.includes('biologico') && wine.description?.includes('bio')) score += 0.3;\n  if (queryLower.includes('abbinamento')) score += 0.1;\n  \n  // Price-quality ratio\n  const priceQualityRatio = (100 - wine.price) / 100;\n  score += priceQualityRatio * 0.1;\n  \n  return {\n    ...wine,\n    relevance_score: Math.min(score, 1.0),\n    match_reasons: []\n  };\n});\n\n// Sort by relevance\nscor…edWines.sort((a, b) => b.relevance_score - a.relevance_score);\n\nreturn {\n  json: {\n    query: userQuery,\n    results: scoredWines.slice(0, 5),\n    total_found: wines.length\n  }\n};",
        "toolDescription": "=Calcola punteggi di rilevanza e ordina i vini in base alla query dell'utente. Considera prezzo, caratteristiche e preferenze."
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.1,
      "position": [-800, 700],
      "id": "relevance-scorer",
      "name": "Wine Relevance Scorer"
    },
    {
      "parameters": {
        "jsCode": "// Food-Wine Pairing Engine\nconst pairingRules = {\n  // Carni\n  'bistecca': ['Barolo', 'Brunello di Montalcino', 'Cabernet Sauvignon', 'Amarone'],\n  'agnello': ['Chianti Classico', 'Côtes du Rhône', 'Rioja'],\n  'maiale': ['Pinot Noir', 'Barbera', 'Dolcetto'],\n  'pollo': ['Chardonnay', 'Vermentino', 'Pinot Grigio'],\n  \n  // Pesce\n  'pesce': ['Vermentino', 'Albariño', 'Grüner Veltliner', 'Sauvignon Blanc'],\n  'salmone': ['Pinot Noir', 'Chardonnay', 'Riesling'],\n  'frutti di mare': ['Albariño', 'Muscadet', 'Verdicchio'],\n  \n  // Pasta\n  'carbonara': ['Frascati', 'Pecorino', 'Verdicchio'],\n  'amatriciana': ['Montepulciano', 'Sangiovese', 'Cesanese'],\n  'pesto': ['Vermentino', 'Pigato', 'Rossese'],\n  \n  // Formaggi\n  'parmigiano': ['Lambrusco', 'Sangiovese', 'Franciacorta'],\n  'gorgonzola': ['Sauternes', 'Porto', 'Passito'],\n  \n  // Dessert\n  'cioccolato': ['Barolo Chinato', 'Banyuls', 'Porto Vintage'],\n  'tiramisù': ['Moscato', 'Vin Santo', 'Recioto']\n};\n\nconst food = $input.all()[0].json.food?.toLowerCase() || '';\nlet recommendations = [];\n\n// Find matching pairing rules\nfor (const [dish, wines] of Object.entries(pairingRules)) {\n  if (food.includes(dish)) {\n    recommendations = wines;\n    break;\n  }\n}\n\nreturn {\n  json: {\n    food: food,\n    recommended_wine_types: recommendations,\n    pairing_explanation: recommendations.length > 0 \n      ? `Per ${food}, consiglio questi vini per il loro equilibrio perfetto`\n      : 'Dimmi che piatto vuoi abbinare per consigli specifici'\n  }\n};",
        "toolDescription": "=Sistema esperto di abbinamenti cibo-vino. Fornisce suggerimenti basati su regole enogastronomiche consolidate."
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.1,
      "position": [-800, 850],
      "id": "pairing-engine",
      "name": "Food Pairing Engine"
    },
    {
      "parameters": {
        "model": "sentence-transformers/all-MiniLM-L6-v2",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [-600, 400],
      "id": "embeddings",
      "name": "Query Embeddings",
      "credentials": {
        "ollamaApi": {
          "id": "ollama-cred",
          "name": "Ollama Local"
        }
      }
    }
  ],
  "connections": {
    "Chat Interface": {
      "main": [[{"node": "RAG Sommelier Agent", "type": "main", "index": 0}]]
    },
    "Ollama LLM": {
      "ai_languageModel": [[{"node": "RAG Sommelier Agent", "type": "ai_languageModel", "index": 0}]]
    },
    "Chat Memory": {
      "ai_memory": [[{"node": "RAG Sommelier Agent", "type": "ai_memory", "index": 0}]]
    },
    "Qdrant Vector Search": {
      "ai_tool": [[{"node": "RAG Sommelier Agent", "type": "ai_tool", "index": 0}]]
    },
    "Get Wine Metadata": {
      "ai_tool": [[{"node": "RAG Sommelier Agent", "type": "ai_tool", "index": 1}]]
    },
    "Wine Relevance Scorer": {
      "ai_tool": [[{"node": "RAG Sommelier Agent", "type": "ai_tool", "index": 2}]]
    },
    "Food Pairing Engine": {
      "ai_tool": [[{"node": "RAG Sommelier Agent", "type": "ai_tool", "index": 3}]]
    },
    "Query Embeddings": {
      "ai_embedding": [[{"node": "Qdrant Vector Search", "type": "ai_embedding", "index": 0}]]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}